{"version":3,"sources":["Center.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","root","maxWidth","marginTop","media","height","bottom","display","flexDirection","justifyContent","Center","center_id","name","address","block_name","district_name","fee_type","sessions","pincode","React","useState","showSessions","setShowSessions","classes","Card","className","CardActionArea","onClick","CardContent","Typography","gutterBottom","variant","component","color","CardActions","style","background","padding","borderRadius","Dialog","onClose","open","map","session","Badge","marginRight","date","vaccine","min_age_limit","availability_capacity","slots","slot","API_URL","App","statesList","setStatesList","state","setState","districtList","setDistrictList","district","setDistrict","centerList","setCenterList","loading","setLoading","useEffect","fetch","method","then","res","json","data","states","catch","err","console","error","districts","district_id","alignItems","width","Grid","container","spacing","item","xs","md","FormControl","InputLabel","id","Select","value","onChange","e","target","placeholder","labelId","MenuItem","state_id","state_name","Button","Date","reqDate","getDate","toString","getMonth","getFullYear","centers","log","findAppointments","CircularProgress","center","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37cd6755.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Dialog } from '@material-ui/core';\nimport { Badge } from 'react-bootstrap';\nimport { CenterType } from './App';\n\n\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        marginTop: '2%'\n    },\n\n    media: {\n        height: 250,\n    },\n\n    bottom: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n    }\n});\n\nconst Center: React.FunctionComponent<CenterType> = ({\n    center_id,\n\tname,\n\taddress,\n\tblock_name,\n\tdistrict_name,\n\tfee_type,\n\tpincode,\n\tsessions,\n}) => {\n\n    const [showSessions, setShowSessions] = React.useState<boolean>(false);\n\n    const classes = useStyles();\n\n    return (\n    <>\n      <Card className={classes.root}>\n        <CardActionArea\n            onClick={() => {\n                setShowSessions(true);\n            }}\n        >\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {block_name} - {address} - {district_name}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions\n            className={classes.bottom}\n        >\n          <div\n            style={{\n                background: '#89e2fa',\n                color: 'black',\n                padding: '2%',\n                borderRadius: '5%'\n            }}\n          >\n              {fee_type}\n          </div>\n        </CardActions>\n      </Card>\n      <Dialog onClose={() => setShowSessions(false)} open={showSessions}>\n            {\n                sessions.map(session => {\n                    return (\n                        <div\n                            style={{\n                                padding: '2%'\n                            }}\n                        >\n                            <div\n                                style={{\n                                    display: 'flex',\n                                    flexDirection: 'row',\n                                    justifyContent: 'flex-start',\n                                    marginTop: '5%'\n                                }}\n                            >\n                                <Badge variant='dark' style={{\n                                    marginRight: '1%'\n                                }}>\n                                    {session.date}\n                                </Badge>\n                                <Badge variant='info' style={{\n                                    marginRight: '1%'\n                                }}>\n                                    {session.vaccine}\n                                </Badge>\n                                <Badge variant='warning' style={{\n                                    marginRight: '1%'\n                                }}>\n                                    {session.min_age_limit}+\n                                </Badge>\n                                <br />\n                                <Badge variant='success' style={{\n                                    marginRight: '1%'\n                                }}>\n                                    {session.availability_capacity}\n                                </Badge>\n                            </div>\n                            {session.slots.map(slot => \n                                <span style={{\n                                    marginRight: '2%'\n                                }}>\n                                    <Badge variant='primary'>{slot}</Badge>\n                                </span>\n                            )}\n                        </div>\n                    )\n                })\n            }\n      </Dialog>\n      </>\n    );\n}\n\nexport default Center;","import React, { useEffect } from 'react';\nimport { Select, MenuItem, InputLabel, FormControl, Button, Grid, CircularProgress } from '@material-ui/core';\nimport Center from './Center';\n\nconst API_URL = 'https://cdn-api.co-vin.in/api';\n\n\ntype State = {\n\tstate_id: number,\n\tstate_name: string\n}\n\ntype District = {\n\tdistrict_id: number,\n\tdistrict_name: number,\n\tstate_id: number\n}\n\nexport type SessionType = {\n\tsession_id: string,\n\tavailability_capacity: number,\n\tdate: string,\n\tmin_age_limit: number,\n\tslots: Array<string>,\n\tvaccine: string\n}\n\nexport type CenterType = {\n\tcenter_id: number,\n\tname: string,\n\taddress: string,\n\tblock_name: string,\n\tdistrict_name: string,\n\tfee_type: string,\n\tpincode: number,\n\tsessions: Array<SessionType>\n}\n\nconst App: React.FunctionComponent = () => {\n\tconst [statesList, setStatesList] = React.useState<Array<State>>([]);\n\tconst [state, setState] = React.useState<number>(1); \n\n\tconst [districtList, setDistrictList] = React.useState<Array<District>>([]);\n\tconst [district, setDistrict] = React.useState<number>(1); \n\n\tconst [centerList, setCenterList] = React.useState<Array<CenterType>>([]);\n\n\tconst [loading, setLoading] = React.useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tfetch(API_URL + '/v2/admin/location/states', {\n\t\t\tmethod: 'GET'\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tsetStatesList(data.states);\n\t\t})\n\t\t.catch(err => console.error(err))\n\t}, [])\n\n\n\tuseEffect(() => {\n\t\tfetch(API_URL + `/v2/admin/location/districts/${state}`, {\n\t\t\tmethod: 'GET'\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tsetDistrictList(data.districts);\n\t\t\tsetDistrict(data.districts[0].district_id);\n\t\t})\n\t\t.catch(err => console.error(err))\n\t}, [state])\n\n\tconst findAppointments = () => {\n\t\tsetLoading(true);\n\t\tconst date = new Date();\n\t\tconst day = date.getDate().toString();\n\t\tconst month = (date.getMonth() + 1).toString();\n\t\tconst year = date.getFullYear().toString();\n\n\t\tconst reqDate = day + '-' + month + '-' + year;\n\n\t\tfetch(API_URL + `/v2/appointment/sessions/public/calendarByDistrict?district_id=${district}&date=${reqDate}`, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\t// data.centers is an array\n\t\t\tsetCenterList(data.centers);\n\t\t\tsetLoading(false);\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err);\n\t\t\tsetLoading(false);\n\t\t})\n\t}\n\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\tjustifyContent: 'flex-start',\n\t\t\t\talignItems: 'center',\n\t\t\t\theight: '100vh',\n\t\t\t\twidth: '100vw'\n\t\t\t}}\n\t\t>\n\t\t\t<Grid container spacing={3} style={{\n\t\t\t\tpadding: '10%'\n\t\t\t}}>\n\n\t\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t<FormControl>\n\t\t\t\t\t<InputLabel id='state-label'>State</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tvalue={state}\n\t\t\t\t\t\tonChange={e => setState(e.target.value as number)}\n\t\t\t\t\t\tplaceholder='State'\n\t\t\t\t\t\tlabelId=''\n\t\t\t\t\t>\n\t\t\t\t\t\t{statesList.map(state => {\n\t\t\t\t\t\t\treturn <MenuItem value={state.state_id} key={state.state_id}>{state.state_name}</MenuItem>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t<FormControl>\n\t\t\t\t\t<InputLabel id='district-label'>District</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tvalue={district}\n\t\t\t\t\t\tonChange={e => setDistrict(e.target.value as number)}\n\t\t\t\t\t\tplaceholder='District'\n\t\t\t\t\t\tlabelId='district-label'\n\t\t\t\t\t>\n\t\t\t\t\t\t{districtList.map(district => {\n\t\t\t\t\t\t\treturn <MenuItem value={district.district_id} key={district.district_id}>{district.district_name}</MenuItem>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Select>\t\n\t\t\t\t</FormControl>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tcolor='secondary'\n\t\t\t\t\tonClick={e => findAppointments()}\n\t\t\t\t>\n\t\t\t\t\tFind Appointments\n\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid container spacing={3}>\n\t\t\t\t{loading && <CircularProgress />}\n\t\t\t\t{\n\t\t\t\t\tcenterList.map(center => \n\t\t\t\t\t<Grid item xs={12} md={3}>\n\t\t\t\t\t\t<Center {...center} key={center.center_id}/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t</div>\n\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}